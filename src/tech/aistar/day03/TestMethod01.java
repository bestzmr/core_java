package tech.aistar.day03;

/**
 * 本类用来演示:
 *
 * @author: success
 * @date: 2020/7/18 11:00 上午
 */
public class TestMethod01 {

    //程序的唯一的入口
    static public void main(String[] args) {
        //如何调用自定义的方法 - 关心方法调用的方式

        //调用的方式 - 1. 直接使用类调用(静态方法),    2. 使用对象调用(非静态方法)
        //原则:它是属于谁的,就是谁调用.

        //static登场
        //静态成员初始化的时机
        //当启动程序的时候,JVM加载类进内存的时候,就会立即给静态方法分配空间以及初始化.并且初始化的
        //次数只有一次.静态的方法依赖于类.
        //静态方法可以直接使用类名.方法名调用

        //非静态成员
        //初始化的时机:当每次只要创建对象的时候,就会给非静态方法分配空间以及初始化
        //非静态方法是依赖于对象的.属于对象.
        //非静态方法是使用对象.方法名调用.

        //如何参加对象?调用谁(类)里面的方法,就去创建谁的对象?
        //语法: 类名 对象名 = new 类名();

        TestMethod01 t1 = new TestMethod01();
        t1.test01();

        //调用静态方法... 静态方法属于类的.
        TestMethod01.test02();

        //t1.test02();

        //补充:如果在本类中[方法的调用者,方法的定义者在同一个类中的时候]
        //前提是同一个类中的时候,静态方法中是允许直接去调用静态方法的.
        //省略类名
        test02();

    }

//    定义一个公开的无返回类型无参的方法
    //
    public void test01(){
        //方法体 - 写程序的...
        System.out.println("test01...");
    }

//    定义公开的无返回类型的静态的无参的方法
    public static void test02(){
        System.out.println("test02...");
    }
}
